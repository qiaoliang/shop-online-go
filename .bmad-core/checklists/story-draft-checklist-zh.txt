# 故事草稿检查清单

Scrum Master 应使用此检查清单来验证每个故事是否包含足够的上下文，以便开发人员代理能够成功实施，假设开发人员代理具有合理的能力来解决问题。

[[LLM: 初始化说明 - 故事草稿验证

在进行此检查清单之前，请确保您可以访问：

1. 正在验证的故事文档（通常在 docs/stories/ 中或直接提供）
2. 父级史诗上下文
3. 任何引用的架构或设计文档
4. 如果此构建基于先前工作，则为先前相关故事

重要：此检查清单在实施开始之前验证单个故事。

验证原则：

1. 清晰度 - 开发人员应该了解要构建的内容
2. 上下文 - 为什么要构建这个以及它如何适应
3. 指导 - 关键技术决策和遵循的模式
4. 可测试性 - 如何验证实施是否有效
5. 自包含 - 大多数所需信息都在故事本身中

请记住：我们假设有能力的开发人员代理可以：

- 研究文档和代码库
- 做出合理的技术决策
- 遵循既定模式
- 在真正卡住时寻求澄清

我们正在检查足够的指导，而不是详尽的细节。]]

## 1. 目标和上下文清晰度

[[LLM: 没有明确的目标，开发人员会构建错误的东西。验证：

1. 故事说明要实现的功能
2. 业务价值或用户收益明确
3. 解释了这如何适应更大的史诗/产品
4. 依赖关系是明确的（“需要完成故事 X”）
5. 成功看起来像是具体的，而不是模糊的]]

- [ ] 故事目标/目的明确说明
- [ ] 与史诗目标的关系显而易见
- [ ] 解释了故事如何适应整体系统流程
- [ ] 确定了对先前故事的依赖关系（如果适用）
- [ ] 业务上下文和价值明确

## 2. 技术实施指导

[[LLM: 开发人员需要足够的技术上下文来开始编码。检查：

1. 提到要创建或修改的关键文件/组件
2. 在不明显的情况下指定技术选择
3. 确定与现有代码的集成点
4. 定义或引用数据模型或 API 合同
5. 提出非标准模式或例外情况

注意：我们不需要列出每个文件 - 只需列出重要的文件。]]

- [ ] 确定要创建/修改的关键文件（不一定详尽）
- [ ] 提到此故事特别需要的技术
- [ ] 充分描述关键 API 或接口
- [ ] 参考必要的数据模型或结构
- [ ] 列出所需的环境变量（如果适用）
- [ ] 注意任何标准编码模式的例外情况

## 3. 参考有效性

[[LLM: 参考资料应该有帮助，而不是创建寻宝游戏。确保：

1. 参考指向特定部分，而不是整个文档
2. 解释每个参考的相关性
3. 在故事中总结关键信息
4. 参考是可访问的（不是断开的链接）
5. 如果需要，总结先前的故事上下文]]

- [ ] 外部文档的参考指向特定相关部分
- [ ] 总结先前故事的关键信息（不仅仅是参考）
- [ ] 提供参考的相关性上下文
- [ ] 参考使用一致的格式（例如，`docs/filename.md#section`）

## 4. 自包含性评估

[[LLM: 故事应该大部分是自包含的，以避免上下文切换。验证：

1. 核心要求在故事中，而不仅仅是在参考中
2. 领域术语已解释或从上下文中显而易见
3. 明确陈述假设
4. 提到边缘情况（即使推迟）
5. 故事可以在不阅读其他 10 个文档的情况下理解]]

- [ ] 包含所需的核心信息（不过分依赖外部文档）
- [ ] 明确陈述隐含假设
- [ ] 解释领域特定术语或概念
- [ ] 处理边缘情况或错误场景

## 5. 测试指导

[[LLM: 测试确保实施确实有效。检查：

1. 指定测试方法（单元、集成、端到端）
2. 列出关键测试场景
3. 成功标准是可衡量的
4. 注意特殊测试注意事项
5. 故事中的验收标准是可测试的]]

- [ ] 概述所需的测试方法
- [ ] 确定关键测试场景
- [ ] 定义成功标准
- [ ] 注意特殊测试注意事项（如果适用）

## 验证结果

[[LLM: 最终故事验证报告

生成简明的验证报告：

1. 快速总结

   - 故事准备情况：准备好/需要修订/被阻止
   - 清晰度评分（1-10）
   - 识别的主要差距

2. 填写验证表：

   - 通过：要求明确满足
   - 部分：有一些差距但可行
   - 失败：缺少关键信息

3. 具体问题（如果有）

   - 列出需要解决的具体问题
   - 提出具体改进建议
   - 确定任何阻塞依赖关系

4. 开发人员视角
   - 您能否按书写的故事实施？
   - 您会有什么问题？
   - 什么可能导致延迟或返工？

务实 - 完美的文档不存在，但它必须足以为开发代理提供极端上下文，以便完成工作而不制造混乱。]]

| 类别                             | 状态 | 问题 |
| -------------------------------- | ------ | ------ |
| 1. 目标和上下文清晰度            | _待定_  |        |
| 2. 技术实施指导 | _待定_  |        |
| 3. 参考有效性           | _待定_  |        |
| 4. 自包含性评估       | _待定_  |        |
| 5. 测试指导                  | _待定_  |        |

**最终评估：**

- 准备好：故事提供了足够的上下文以进行实施
- 需要修订：故事需要更新（请参阅问题）
- 被阻止：需要外部信息（指定需要什么信息） 