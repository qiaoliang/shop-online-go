# 变更导航检查清单

**目的：** 系统地指导选定的代理和用户进行分析和规划，当在 BMad 工作流中识别出重大变更（转向、技术问题、缺失需求、失败的故事）时。

**说明：** 与用户一起查看每个项目。标记 `[x]` 表示已完成/确认，`[N/A]` 表示不适用，或添加讨论点的备注。

[[LLM: 初始化说明 - 变更导航

开发过程中变更是不可避免的，但我们如何处理它们决定了项目的成功或失败。

在继续之前，请了解：

1. 此检查清单适用于影响项目方向的重大变更
2. 故事中的小调整不需要此过程
3. 目标是最大限度地减少浪费的工作，同时适应新的现实
4. 用户的认同至关重要 - 他们必须理解并批准变更

所需上下文：

- 触发的故事或问题
- 当前项目状态（已完成的故事，当前史诗）
- 访问 PRD、架构和其他关键文档
- 理解计划的剩余工作

方法：
这是与用户的互动过程。与用户一起逐节工作，讨论影响和选项。用户做出最终决定，但提供有关技术可行性和影响的专家指导。

请记住：变更是改进的机会，而不是失败。以专业和建设性的方式处理它们。]]

---

## 1. 理解触发器和上下文

[[LLM: 首先充分理解出了什么问题以及为什么。不要急于解决方案。提出探究性问题：

- 触发此审查的具体事件是什么？
- 这是一次性问题还是更大问题的症状？
- 这是否可以更早预见？
- 哪些假设是错误的？

要具体和事实，不要指责。]]

- [ ] **识别触发故事：** 明确识别揭示问题的故事（或故事）。
- [ ] **定义问题：** 准确阐明核心问题。
  - [ ] 是技术限制/死胡同吗？
  - [ ] 是新发现的需求吗？
  - [ ] 是对现有需求的根本误解吗？
  - [ ] 是基于反馈或新信息的必要转向吗？
  - [ ] 是失败/放弃的故事需要新方法吗？
- [ ] **评估初步影响：** 描述观察到的直接后果（例如，进度受阻，功能不正确，不可行的技术）。
- [ ] **收集证据：** 记录支持问题定义的具体日志、错误消息、用户反馈或分析。

## 2. 史诗影响评估

[[LLM: 变更会在项目结构中产生涟漪。系统地评估：

1. 我们能否通过修改来挽救当前史诗？
2. 鉴于此变更，未来的史诗仍然有意义吗？
3. 我们是在创建还是消除依赖关系？
4. 史诗顺序是否需要重新排序？

考虑即时和下游影响。]]

- [ ] **分析当前史诗：**
  - [ ] 包含触发故事的当前史诗是否仍可完成？
  - [ ] 当前史诗是否需要修改（故事更改、添加、删除）？
  - [ ] 当前史诗是否应被放弃或从根本上重新定义？
- [ ] **分析未来史诗：**
  - [ ] 查看所有剩余计划的史诗。
  - [ ] 问题是否需要更改未来史诗中的计划故事？
  - [ ] 问题是否使任何未来史诗无效？
  - [ ] 问题是否需要创建全新的史诗？
  - [ ] 是否应更改未来史诗的顺序/优先级？
- [ ] **总结史诗影响：** 简要记录对项目史诗结构和流程的整体影响。

## 3. 工件冲突和影响分析

[[LLM: 文档驱动 BMad 中的开发。检查每个工件：

1. 此变更是否使记录的决策无效？
2. 架构假设是否仍然有效？
3. 用户流程是否需要重新思考？
4. 技术约束是否与记录的不同？

要彻底 - 错过的冲突会导致未来的问题。]]

- [ ] **审查 PRD：**
  - [ ] 问题是否与 PRD 中陈述的核心目标或需求冲突？
  - [ ] 基于新的理解，PRD 是否需要澄清或更新？
- [ ] **审查架构文档：**
  - [ ] 问题是否与记录的架构（组件、模式、技术选择）冲突？
  - [ ] 具体组件/图表/部分是否受到影响？
  - [ ] 技术列表是否需要更新？
  - [ ] 数据模型或模式是否需要修订？
  - [ ] 外部 API 集成是否受到影响？
- [ ] **审查前端规范（如果适用）：**
  - [ ] 问题是否与 FE 架构、组件库选择或 UI/UX 设计冲突？
  - [ ] 具体 FE 组件或用户流程是否受到影响？
- [ ] **审查其他工件（如果适用）：**
  - [ ] 考虑对部署脚本、IaC、监控设置等的影响。
- [ ] **总结工件影响：** 列出所有需要更新的工件及所需更改的性质。

## 4. 前进路径评估

[[LLM: 清晰地呈现选项及其优缺点。对于每个路径：

1. 需要的努力是什么？
2. 有哪些工作被抛弃？
3. 我们承担了哪些风险？
4. 这如何影响时间表？
5. 这在长期内是否可持续？

诚实面对权衡。很少有完美的解决方案。]]

- [ ] **选项 1：直接调整/集成：**
  - [ ] 问题是否可以通过在现有计划中修改/添加未来故事来解决？
  - [ ] 定义这些调整的范围和性质。
  - [ ] 评估此路径的可行性、努力和风险。
- [ ] **选项 2：潜在回滚：**
  - [ ] 回滚已完成的故事是否会显著简化问题的解决？
  - [ ] 确定要考虑回滚的具体故事/提交。
  - [ ] 评估回滚所需的努力。
  - [ ] 评估回滚的影响（丢失的工作、数据影响）。
  - [ ] 比较直接调整的净收益/成本。
- [ ] **选项 3：PRD MVP 审查和潜在重新范围：**
  - [ ] 鉴于问题和约束，原始 PRD MVP 是否仍可实现？
  - [ ] MVP 范围是否需要缩减（删除功能/史诗）？
  - [ ] 核心 MVP 目标是否需要修改？
  - [ ] 是否需要替代方法来满足原始 MVP 意图？
  - [ ] **极端情况：** 问题是否需要根本性重新计划或可能的新 PRD V2（由 PM 处理）？
- [ ] **选择推荐路径：** 根据评估，达成最可行的前进路径。

## 5. Sprint 变更提案组件

[[LLM: 提案必须可操作且清晰。确保：

1. 用简单语言解释问题
2. 尽可能量化影响
3. 推荐路径有明确的理由
4. 下一步是具体的并已分配
5. 为变更定义成功标准

此提案指导所有后续工作。]]

（确保从前几节中商定的所有要点都在提案中捕获）

- [ ] **识别的问题摘要：** 清晰、简明的问题陈述。
- [ ] **史诗影响摘要：** 史诗受到的影响。
- [ ] **工件调整需求：** 需要更改的文档列表。
- [ ] **推荐的前进路径：** 选择的解决方案及其理由。
- [ ] **PRD MVP 影响：** 范围/目标的更改（如果有）。
- [ ] **高级行动计划：** 故事/更新的下一步。
- [ ] **代理交接计划：** 确定所需角色（PM、架构师、设计架构师、PO）。

## 6. 最终审查和交接

[[LLM: 变更需要协调。在结束之前：

1. 用户是否完全同意计划？
2. 所有利益相关者是否了解影响？
3. 向其他代理的交接是否清晰？
4. 如果变更失败，是否有回滚计划？
5. 我们将如何验证变更是否有效？

获得明确的批准 - 隐含的协议会导致问题。

最终报告：
完成检查清单后，提供简明摘要：

- 发生了什么变化以及为什么
- 我们正在做什么
- 谁需要做什么
- 我们何时知道它是否有效

保持行动导向和前瞻性。]]

- [ ] **审查检查清单：** 确认讨论了所有相关项目。
- [ ] **审查 Sprint 变更提案：** 确保其准确反映讨论和决策。
- [ ] **用户批准：** 获得用户对提案的明确批准。
- [ ] **确认下一步：** 重申交接计划和特定代理需要采取的下一步行动。

--- 